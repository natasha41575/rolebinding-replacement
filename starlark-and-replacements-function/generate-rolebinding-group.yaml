apiVersion: fn.kpt.dev/v1alpha1
kind: StarlarkRun
metadata:
  name: configure-rolebinding-group.yaml
  annotations:
    config.kubernetes.io/local-config: "true"
source: |-
  def group(resource_list, role):
    group = ""
    for r in resource_list["items"]:
      if r["apiVersion"] == "v1" and r["kind"] == "ConfigMap" and r.get("metadata").get("name") == "gcloud-config.kpt.dev":
        group = r["data"]["projectID"] + "-" + r["data"]["namespace"] + "-" + role + "@" + r["data"]["domain"]
    return group

  def generate_configmap(resources, group):
    configMap = {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "name": "rolebinding-group",
        "annotations": {
          "config.kubernetes.io/local-config": "true"
        }
      },
      "data": {
        "name": group,
      }
    }
    resources.append(configMap)

  generate_configmap(ctx.resource_list["items"], group(ctx.resource_list, "appadmin"))
